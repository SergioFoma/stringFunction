#ifndef H_ALLFUNCTION
#define H_ALLFUNCTION

#include <stdio.h>
#include <unistd.h>

//-----------------------------------------------
//!
//! @param[in] line     line - константная строка.
//!
//! @brief Печатает line в консоль.
//!
//------------------------------------------------
int myPuts( const char* line );

//--------------------------------------------------------------------------
//!
//! @param[in] line     line - константная строка.
//! @param[in] ch       ch - символ, вхождение которого ищется в строке line.
//!
//! @return неотрицательно значение в случае успешного выполнения, иначе EOF.
//!
//! @brief Ищет первое вхождение символа ch в строке line.
//!
//----------------------------------------------------------------------------
char* myStrchr( const char* line, int ch );

//----------------------------------------------------------------------------
//!
//! @param[in] line     line - константная строка.
//!
//! @return длину строки line.
//!
//! @brief Ищет длину константной строки line.
//!
//-----------------------------------------------------------------------------
size_t myStrlen( const char* line );

//-----------------------------------------------------------------------------------
//!
//! @param[in] strDestination   strDestination - строка, куда происходит копирование.
//! @param[in] strSource        strSource - константная строка, которая копируется.
//!
//! @return строку, в которую произошло копирование ( strDestination ).
//!
//! @brief Копирует одну строку в другую.
//!
//-----------------------------------------------------------------------------------
char* myStrcpy( char* strDestination, const char *strSource );

//------------------------------------------------------------------------------------
//!
//! @param[in] strDest      strDest - строка, в которую происходит копирование.
//! @param[in] strSource    strSource - константная строка, которая копируется.
//! @param[in] count        count - количество символов, которое необходимо скопироват.
//!
//! @return строку, в которую произошло копирование ( strDest ).
//!
//! @brief копирует указанное количество символов одной строки в другую.
//!
//-------------------------------------------------------------------------------------
char* myStrncpy( char *strDest, const char *strSource, size_t count );

//-------------------------------------------------------------------------------------------------
//!
//! @param[in] strDestination   strDestination - строка, к которой будет добавляться другая строка.
//! @param[in] strSource        strSource - строка, которая будет добавляться к другой строке.
//!
//! @return строку, в конец которой была добавлена другая строка.
//!
//! @brief Добавляет одну строку в конец другой.
//!
//---------------------------------------------------------------------------------------------------
char* myStrcat( char* strDestination, const char* strSource );

//---------------------------------------------------------------------------------------------------
//!
//! @param[in] strDestination   strDestination - строка, к которой будет добавляться другая строка.
//! @param[in] strSource        strSource - строка, которая будет добавляться к другой строке.
//! @param[in] count            count - количество символов, которое необходимо добавить.
//!
//! @return строку, в конец которой были добавлены символы другой строки.
//!
//! @brief Добавляет указанное количество символов одной строки в конец другой.
//!
//---------------------------------------------------------------------------------------------------
char* myStrncat( char* strDestination, const char* strSource, size_t count );

//---------------------------------------------------------------------------------------------------
//!
//! @param[in] str      str - строка, в которую будут записывать символы из файла.
//! @param[in] numChars     numChars - количество символов, которое нужно считать из файла.
//! @param[in] *stream       *stream - указатель на стрктуру типа FILE.
//!
//! @return строку, в которую были записаны символы из файла.
//!
//! @brief записывает в строку str указанное количество символов из файла.
//!
//---------------------------------------------------------------------------------------------------
char* myFgets( char* str, int numChars, FILE* stream );

//---------------------------------------------------------------------------------------------------
//!
//! @param[in] line     line - константная строка.
//!
//! @return строку, в которую была скопирована line, либо NULL, если не удалось выделить память.
//!
//! @brief Выделяет память для копирования строки line и копирует её.
//!
//---------------------------------------------------------------------------------------------------
char* myStrdup( const char* line );

//---------------------------------------------------------------------------------------------------
//!
//! @param[in] **line     **line - указатель на буфер.
//! @param[in] *n        *n - указатель на выделенную память.
//! @param[in] *stream    *stream - указатель на стркутуру типа FILE.
//!
//! @return Выделенное количество памяти.
//!
//! @brief Считывает стоку из потока ввода.
//!
//---------------------------------------------------------------------------------------------------
ssize_t myGetline( char** line, size_t* n, FILE* stream );

#endif